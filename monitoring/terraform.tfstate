{
  "version": 4,
  "terraform_version": "1.10.2",
  "serial": 13,
  "lineage": "a054125c-dfe6-33de-f61e-60d91ebcae27",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "eks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infra/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVTFJUHNNWm5mS0V3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBeE1UWXdPVEE0TWpoYUZ3MHpOVEF4TVRRd09URXpNamhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3Ym9VVWFQNlhoK2ZJcm1UZzFTOUU4WXZlODFsbzBOMzQ2QzFMOEhkelBMeUN3Q3krRzRnUUNSNm0KaFB4UEVqYjFJbER2ckxlRUJDNVhBZFYrMkQ1QW1tSXF2ckttN1E5bmFsemtDNFlyVmNSWWVFT0pZT2h2V0U5awowa2MzVWJiWWtsbmV1bVVvRGRWc3ZDQUJ6YkZDdDdCQ1JCY0x0REo1Z1I0Rm5haTkwUkJVWVl4dldjaUEvSnRRCmJ0QVBCcWpTeGpXQTMvNC91Uy9kVzJOZnplVXRmUUtmSVFkMXpjM2FXQldndXArRHRsd0MySlFFQ2xrWGluMzIKdENSM0h4QU1EczdzQW56SDZSY1VCUW81aDlkU05DcVFYQlVLdU5ONS9OZzhHeFlLWHpiYnNBVDMyVUo3RzZxZgpiU0czbnNaUlpLZEhIb3NwVTNIVFFaQ1VoeUh0QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUSzlycngvbkhmc1pOWTVyalNxZGtZTFJ1aWNqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjZMbno2SmZHQgp5aUVDaCtNTHBMcmk5SXEwUVRFd0MyWXdKQUxIYWNCbmdMYkJqem43SWxEYlFnNXFhS3R2MUdSbG9MWDhQaGNFCkw5M1VKNEhwL0IxNWdpODFmQm5iWkhLQUhzcHZGeHoxOC9Va0F6TDFiSm9OV2hCcjlheElvZVN5TVE4R2FyK0gKVWVvek80YVhJUmNDNUlkMXoxcWNIWVo5MjJIankzYlBSS2VKaDYrbzJoMWZQUytoY3R2OG8vVEZNSGFSbzNmOApMMFVLYnpzRUwxeU90NDg2Q1diOHJnZUpPYmxvcWZuNy9yRUVOSkhnZG5aVDVpOGZpY2NPTGlHdUptSThGWW9KClFtRDEyMXZNQWhpTHc5bEFUS05MNU5ERGRaSU0yaXZuVlNGZm9KS1JRaUJIWFQ2bHVLSExtZ0FmSXJXWlRPUVgKeGk0cHZIZTM4Z0hrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "cluster_endpoint": "https://F0154D3C8FF9632CE44235140BCD0D95.gr7.us-east-1.eks.amazonaws.com",
                "cluster_name": "dev-cluster",
                "ecr_repo_arn": "arn:aws:ecr:us-east-1:172221322213:repository/mytomorrows-app",
                "vpc_public_subnets": [
                  "subnet-0af8626142dcf52a8",
                  "subnet-05feb8700d57cbec4",
                  "subnet-00b3ef7592a9bdd7a"
                ]
              },
              "type": [
                "object",
                {
                  "cluster_certificate_authority_data": "string",
                  "cluster_endpoint": "string",
                  "cluster_name": "string",
                  "ecr_repo_arn": "string",
                  "vpc_public_subnets": [
                    "tuple",
                    [
                      "string",
                      "string",
                      "string"
                    ]
                  ]
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus-stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.79.2",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1737020791,
                "last_deployed": 1737020791,
                "name": "prometheus",
                "namespace": "monitoring",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace monitoring $POD_NAME 9100\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace monitoring get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.monitoring.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace monitoring prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.monitoring.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitoring port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n",
                "revision": 1,
                "values": "{}",
                "version": "68.1.1"
              }
            ],
            "name": "prometheus",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "68.1.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.terraform_remote_state.eks"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
